services:
  # ZooKeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - app-network

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app-network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_data:/opt/bitnami/spark/data
    networks:
      - app-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - spark_worker_data:/opt/bitnami/spark/data
    networks:
      - app-network

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # Web Dashboard (Flask App)
  web_dashboard:
    build: 
      context: ./web_dashboard
      dockerfile: Dockerfile
    container_name: web_dashboard
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - kafka
    environment:
      - MONGODB_URI=mongodb://admin:adminpassword@mongodb:27017/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./web_dashboard:/app
      - web_dashboard_logs:/app/logs
    networks:
      - app-network

  # Kafka Producer
  kafka_producer:
    build: 
      context: ./kafka_producer
      dockerfile: Dockerfile
    container_name: kafka_producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./kafka_producer:/app
      - ./data:/data
    networks:
      - app-network

  # Spark Streaming Application
  spark_streaming:
    build: 
      context: ./spark_streaming
      dockerfile: Dockerfile
    container_name: spark_streaming
    depends_on:
      - kafka
      - spark-master
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URI=mongodb://admin:adminpassword@mongodb:27017/
      - SPARK_MASTER=spark://spark-master:7077
    volumes:
      - ./spark_streaming:/app
      - ./models:/models
      - spark_streaming_logs:/app/logs
    networks:
      - app-network

# Define networks
networks:
  app-network:
    driver: bridge

# Define volumes
volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  spark_data:
  spark_worker_data:
  mongodb_data:
  web_dashboard_logs:
  spark_streaming_logs:
